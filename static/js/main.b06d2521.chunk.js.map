{"version":3,"sources":["MapMarker.js","Map.js","TableAndMap.js","assets/milano-2.png","NavigationBar.js","index.js","constants.js"],"names":["MapMarker","React","Component","constructor","props","super","handleClose","this","setState","show","state","render","_jsxs","children","_jsx","PiMicrophoneStageFill","style","height","width","zIndex","cursor","className","status","onClick","InfoWindow","name","address","weekday","onClose","position","bottom","left","textAlign","backgroundColor","boxShadow","padding","fontSize","borderRadius","float","background","border","color","fontWeight","ApiKey","require","Map","_onChildClick","key","childProps","index","results","findIndex","e","original","RowNumber","parseInt","cells","document","querySelectorAll","found","i","length","textContent","Name","parentNode","setTimeout","scrollIntoView","behavior","block","componentDidUpdate","prevProps","_","map","result","id","GoogleMapReact","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","onChildClick","item","Latitude","Longitude","Address","Weekday","Status","SelectColumnFilter","_ref","column","filterValue","setFilter","preFilteredRows","options","useMemo","Set","forEach","row","add","values","value","onChange","target","undefined","option","SearchColumnFilter","_ref2","TableComponent","_ref7","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","allColumns","_Fragment","getElementById","classList","toggle","role","type","getToggleHiddenProps","headerGroup","getHeaderGroupProps","headers","getHeaderProps","minWidth","canFilter","getRowProps","cell","getCellProps","TableAndMap","data","spreadsheetId","apiKey","setData","useState","headerValues","isFetching","useEffect","async","doc","GoogleSpreadsheet","useApiKey","loadInfo","sheet","sheetsByIndex","getRows","sort","a","b","localeCompare","console","error","fetchData","useFetchData","rowsData","AudienceEntryFee","HowToBook","Language","Category","SubCategory","OrganizerName","Description","FacebookGroup","FacebookPage","WhatsApp","GForm","Email","Frequency","Instagram","Level","rowNumber","Time","UpdateInfoFormLink","Venue","Website","WheelchairAccess","useRowsData","columns","useTable","initialState","hiddenColumns","filter","c","hideInitially","accessor","useFilters","useTableInstance","Header","disableFilters","Cell","_ref3","href","BsPencilSquare","maxWidth","_ref4","rel","BsInstagram","BsFacebook","BsWhatsapp","BsGoogle","concat","BsEnvelopeAt","_ref5","Filter","_ref6","useColumns","NavigationBar","src","logo","maxHeight","BsCaretDownSquareFill","addEventListener","closeModal","$el","remove","$trigger","modal","dataset","$target","$close","closest","event","code","$modal","App","qna","question","answer","qa","rootElement","ReactDOM","exports"],"mappings":"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","file":"static/js/main.b06d2521.chunk.js","sourcesContent":["// Import necessary modules and components\nimport React, { useState, useEffect } from \"react\";\nimport { PiMicrophoneStageFill } from \"react-icons/pi\";\n\n// MapMarker Component\nclass MapMarker extends React.Component {\n  // Constructor for the MapMarker component\n  constructor(props) {\n    super(props);\n    // Initialize the state with the show prop\n    this.state = { show: props.show };\n  }\n\n  // Method to handle close events\n  handleClose = () => {\n    // Set the show state to false\n    this.setState({ show: false });\n  };\n\n  // Render the MapMarker component\n  render() {\n    // Define the style for the marker\n    const markerStyle = {\n      height: 20,\n      width: 20,\n      zIndex: 10,\n      cursor: \"pointer\",\n    };\n    return (\n      <div>\n        {/* Render the microphone icon */}\n        <PiMicrophoneStageFill\n          style={markerStyle}\n          // Set the class based on the status prop\n          className={this.props.status === \"Active\" ? \"is-link\" : \"is-danger\"}\n          // Handle click events on the icon\n          onClick={() => this.setState({ show: !this.state.show })}\n        />\n        {/* Render the InfoWindow component if the show state is true */}\n        {this.state.show && (\n          <InfoWindow\n            name={this.props.name}\n            address={this.props.address}\n            weekday={this.props.weekday}\n            status={this.props.status}\n            onClose={this.handleClose}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\n// InfoWindow component\nconst InfoWindow = (props) => {\n  // Destructure the props\n  const { name, address, weekday, status, onClose } = props;\n  // Define the style for the info window\n  const infoWindowStyle = {\n    position: \"relative\",\n    bottom: 50,\n    left: \"-45px\",\n    textAlign: \"center\",\n    width: 220,\n    backgroundColor: \"white\",\n    boxShadow: \"0 2px 7px 1px rgba(0, 0, 0, 0.3)\",\n    padding: 10,\n    fontSize: 14,\n    zIndex: 100,\n    borderRadius: \"25px\",\n  };\n\n  // Define the style for inactive status\n  const inactiveStyle = {\n    color: \"red\",\n    fontWeight: \"bold\",\n  };\n\n  // Render the InfoWindow component\n  return (\n    <div style={infoWindowStyle}>\n      {/* Render the close button */}\n      <button\n        onClick={onClose}\n        style={{\n          float: \"right\",\n          background: \"none\",\n          border: \"none\",\n          cursor: \"pointer\",\n        }}\n      >\n        ✖️\n      </button>\n      {/* Render the name */}\n      <div style={{ fontSize: 14 }}>{name} </div>\n      {/* Render the weekday and address */}\n      <div style={{ fontSize: 10 }}>\n        {weekday} at {address}\n      </div>\n      {/* Render the status if it's inactive */}\n      {status === \"Inactive\" && <div style={inactiveStyle}>Inactive</div>}\n    </div>\n  );\n};\n\n// Export the MapMarker component\nexport default MapMarker;\n","// Import necessary modules and components\nimport React, { useState, useEffect } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport MapMarker from \"./MapMarker\";\n// Import the API key from constants file\nconst { ApiKey } = require(\"./constants\");\n\n// Define the Map component\nclass Map extends React.Component {\n  // Constructor for the Map component\n  constructor(props) {\n    super(props);\n\n    // Initialize the state with an empty results array\n    this.state = {\n      results: [],\n    };\n  }\n\n  // Method to handle click events on the map markers\n  _onChildClick = (key, childProps) => {\n    // Update the state based on the clicked marker\n    this.setState((state) => {\n      // Find the index of the currently shown marker\n      let index = state.results.findIndex((e) => e.show);\n      // If a marker is shown and it's not the clicked one, hide it\n      if (\n        index > 0 &&\n        state.results[index].original.RowNumber != parseInt(key)\n      ) {\n        state.results[index].show = false;\n      }\n      // Find the index of the clicked marker\n      index = state.results.findIndex(\n        (e) => e.original.RowNumber == parseInt(key)\n      );\n      // Toggle the show state of the clicked marker\n      state.results[index].show = !state.results[index].show;\n\n      // Find the table cell with the same name as the clicked marker\n      const cells = document.querySelectorAll(\"td\");\n      var found = null;\n      for (var i = 0; i < cells.length; i++) {\n        if (cells[i].textContent == state.results[index].original.Name) {\n          found = cells[i];\n          break;\n        }\n      }\n      // Highlight the found cell and scroll it into view\n      found.parentNode.style.backgroundColor = \"#fffcb3\";\n      setTimeout(\n        () => (found.parentNode.style.backgroundColor = \"white\"),\n        2000\n      );\n      found.scrollIntoView({ behavior: \"smooth\", block: \"nearest\" });\n\n      // Return the updated results array\n      return { results: state.results };\n    });\n  };\n\n  // Update the state when the props change\n  componentDidUpdate(prevProps) {\n    if (this.props.results != prevProps.results) {\n      this.setState((_, props) => {\n        // Create a new state with the updated results\n        const newState = props.results.map((result) => ({\n          ...result,\n          show: false,\n        }));\n        return { results: newState };\n      });\n    }\n  }\n\n  // Render the Map component\n  render() {\n    return (\n      // Container for the map\n      <div id=\"map\">\n        <GoogleMapReact\n          // Pass the API key to GoogleMapReact\n          bootstrapURLKeys={{ key: ApiKey }}\n          // Set the default center and zoom level of the map\n          defaultCenter={{ lat: 45.463336, lng: 9.187174 }}\n          defaultZoom={12.8}\n          // Handle click events on the map markers\n          onChildClick={this._onChildClick}\n        >\n          {/* Render a MapMarker for each item in the results array */}\n          {this.state.results.map((item) => (\n            <MapMarker\n              key={item.original.RowNumber}\n              lat={item.original.Latitude}\n              lng={item.original.Longitude}\n              address={item.original.Address}\n              weekday={item.original.Weekday}\n              name={item.original.Name}\n              status={item.original.Status}\n              show={item.show}\n            />\n          ))}\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\n// Export the Map component\nexport default Map;\n","// Importing necessary libraries and components\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useFilters, useTable } from \"react-table\";\nimport {\n  BsPencilSquare,\n  BsInstagram,\n  BsFacebook,\n  BsWhatsapp,\n  BsEnvelopeAt,\n  BsGoogle,\n} from \"react-icons/bs\";\nimport Map from \"./Map\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport { ApiKey } from \"./constants\";\n\n// Spreadsheet ID\nconst SpreadsheetId = \"1_X_znvg8kGbFMXoys011182T5ZTGONCsveY9uLEWsr8\";\n\n// Function to create a select filter for the table\nfunction SelectColumnFilter({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n  // Calculate the options for filtering using the preFilteredRows\n  const options = React.useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n\n  // Render a multi-select box\n  return (\n    <select\n      className=\"select is-small\"\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n    >\n      <option value=\"\">All</option>\n      {options.map((option, i) => (\n        <option key={i} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  );\n}\n\n/**\n * A search filter for a column in a table.\n *\n * @param {Object} column - The column to filter.\n * @param {string} column.filterValue - The current filter value.\n * @param {function} column.setFilter - The function to call to set the filter value.\n * @returns {JSX.Element} - The search input element.\n */\nfunction SearchColumnFilter({ column: { filterValue, setFilter } }) {\n  return (\n    // The search input element\n    <input\n      className=\"input is-small\" // The class name for styling\n      value={filterValue || \"\"} // The current filter value or an empty string\n      onChange={(e) => setFilter(e.target.value)} // The function to call when the input value changes\n    />\n  );\n}\n\n/**\n * Custom hook to fetch data from a Google Spreadsheet.\n *\n * @param {string} spreadsheetId - The ID of the Google Spreadsheet.\n * @param {string} apiKey - The API key to access the Google Spreadsheet.\n * @returns {Object} - The fetched data including header values, rows, and fetching status.\n */\nfunction useFetchData(spreadsheetId, apiKey) {\n  const [data, setData] = useState({\n    headerValues: null,\n    rows: [],\n    isFetching: false,\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setData({ ...data, isFetching: true });\n\n        const doc = new GoogleSpreadsheet(spreadsheetId);\n        doc.useApiKey(apiKey);\n        await doc.loadInfo();\n\n        const sheet = doc.sheetsByIndex[0];\n        const rows = await sheet.getRows();\n        rows.sort((a, b) => a.Name.localeCompare(b.Name));\n\n        setData({\n          headerValues: sheet.headerValues,\n          rows: rows,\n          isFetching: false,\n        });\n      } catch (e) {\n        console.error(e);\n        setData({ ...data, isFetching: false });\n      }\n    }\n\n    fetchData();\n  }, [spreadsheetId, apiKey]);\n\n  return data;\n}\n\n/**\n * Custom hook to process the rows data.\n *\n * @param {Object} data - The data object containing header values, rows, and fetching status.\n * @returns {Array} - The processed rows data.\n */\nfunction useRowsData(data) {\n  return useMemo(() => {\n    if (!data.isFetching && data.headerValues != null) {\n      return data.rows.map((row) => ({\n        Address: row[\"Address\"],\n        AudienceEntryFee: row[\"Audience Entry Fee\"],\n        HowToBook: row[\"Contact / Book a Spot\"],\n        Language: row[\"Language\"],\n        Category: row[\"Event Category\"],\n        SubCategory: row[\"Event Sub-Category\"],\n        Status: row[\"Status\"],\n        OrganizerName: row[\"Organizer Name\"],\n        Description: row[\"Event Description\"],\n        FacebookGroup: row[\"Facebook Group\"],\n        FacebookPage: row[\"Facebook Page\"],\n        WhatsApp: row[\"WhatsApp\"],\n        GForm: row[\"Google Form\"],\n        Email: row[\"Email\"],\n        Frequency: row[\"Frequency\"],\n        Instagram: row[\"Instagram\"],\n        Latitude: row[\"Latitude\"],\n        Level: row[\"Comedian Level\"],\n        Longitude: row[\"Longitude\"],\n        Name: row[\"Name\"],\n        RowNumber: row.rowNumber,\n        Time: row[\"Event Time\"],\n        UpdateInfoFormLink: row[\"Update Info Form Link\"],\n        Venue: row[\"Venue\"],\n        Weekday: row[\"Weekday / Month\"],\n        Website: row[\"Website\"],\n        WheelchairAccess: row[\"Wheelchair Access\"],\n      }));\n    }\n    return [];\n  }, [data]);\n}\n\n/**\n * Custom hook to define the table columns.\n *\n * @param {Object} data - The data object containing header values, rows, and fetching status.\n * @returns {Array} - The table columns definition.\n */\nfunction useColumns(data) {\n  return useMemo(() => {\n    if (!data.isFetching && data.headerValues != null) {\n      return [\n        {\n          Header: \"\",\n          accessor: \"UpdateInfoFormLink\",\n          disableFilters: true,\n          Cell: ({ row }) => (\n            <a href={row.original.UpdateInfoFormLink} target=\"_blank\">\n              <BsPencilSquare />\n            </a>\n          ),\n        },\n        {\n          Header: \"\",\n          accessor: \"Instagram\",\n          maxWidth: 20,\n          minWidth: 20,\n          width: 20,\n          disableFilters: true,\n          Cell: ({ row }) => (\n            <div>\n              <a\n                href={row.original.Instagram}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <BsInstagram />\n              </a>\n              <a\n                href={row.original.FacebookPage}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <BsFacebook />\n              </a>\n              <a href={row.original.WhatsApp}>\n                <BsWhatsapp />\n              </a>\n              <a\n                href={row.original.GForm}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <BsGoogle />\n              </a>\n              <a\n                href={\n                  row.original.Email === \"\"\n                    ? \"\"\n                    : row.original.Language === \"Italian\" // Generates a different email link for Italian speakers\n                    ? `mailto:${row.original.Email}?subject=Iscrizione%20open%20mic%20${row.original.Venue}`\n                    : `mailto:${row.original.Email}?subject=Sign%20up%20to%20open%20mic%20${row.original.Venue}`\n                }\n              >\n                <BsEnvelopeAt />\n              </a>\n            </div>\n          ),\n        },\n        {\n          Header: \"Name\",\n          accessor: \"Name\",\n          disableFilters: false,\n          maxWidth: 300,\n          minWidth: 300,\n          Cell: ({ cell: { value } }) => (\n            <b>\n              <i>{value}</i>\n            </b>\n          ),\n          Filter: SearchColumnFilter,\n        },\n        // Add other column definitions here...\n        {\n          Header: \"Description\",\n          accessor: \"Description\",\n          hideInitially: true,\n          Filter: SearchColumnFilter,\n        },\n        {\n          Header: \"Category\",\n          accessor: \"Category\",\n          hideInitially: true,\n          Filter: SearchColumnFilter,\n        },\n        {\n          Header: \"Sub Category\",\n          accessor: \"SubCategory\",\n          hideInitially: true,\n          Filter: SearchColumnFilter,\n        },\n        {\n          Header: \"Status\",\n          accessor: \"Status\",\n          maxWidth: 600,\n          Filter: SelectColumnFilter,\n          filter: \"equals\",\n        },\n        {\n          Header: \"Organizer Name\",\n          accessor: \"OrganizerName\",\n          hideInitially: true,\n          Filter: SearchColumnFilter,\n        },\n        {\n          Header: \"Audience Entry Fee\",\n          accessor: \"AudienceEntryFee\",\n          hideInitially: true,\n          Filter: SelectColumnFilter,\n        },\n        {\n          Header: \"Level\",\n          accessor: \"Level\",\n          Filter: SelectColumnFilter,\n          filter: \"equals\",\n        },\n        {\n          Header: \"Language\",\n          accessor: \"Language\",\n          Filter: SelectColumnFilter,\n        },\n        {\n          Header: \"Frequency\",\n          accessor: \"Frequency\",\n          Filter: SelectColumnFilter,\n        },\n        {\n          Header: \"Weekday\",\n          accessor: \"Weekday\",\n          Filter: SelectColumnFilter,\n        },\n        {\n          Header: \"Time\",\n          accessor: \"Time\",\n          Filter: SearchColumnFilter,\n        },\n        {\n          Header: \"Venue\",\n          accessor: \"Venue\",\n          maxWidth: 600,\n          minWidth: 200,\n          width: 400,\n          Filter: SearchColumnFilter,\n          disableFilters: true,\n        },\n        {\n          Header: \"Website\",\n          accessor: \"Website\",\n          hideInitially: true,\n          disableFilters: true,\n        },\n        {\n          Header: \"Address\",\n          accessor: \"Address\",\n          maxWidth: 600,\n          minWidth: 300,\n          width: 400,\n          Filter: SearchColumnFilter,\n          disableFilters: true,\n        },\n        {\n          Header: \"Wheelchair Access\",\n          accessor: \"WheelchairAccess\",\n          hideInitially: true,\n          Filter: SelectColumnFilter,\n        },\n        {\n          Header: \"How To Book\",\n          accessor: \"HowToBook\",\n          Filter: SearchColumnFilter,\n          disableFilters: true,\n        },\n        {\n          Header: \"Facebook Group\",\n          accessor: \"FacebookGroup\",\n          hideInitially: true,\n          disableFilters: true,\n          Cell: ({ row }) => (\n            <a href={row.original.FacebookGroup}>\n              {row.original.FacebookGroup}\n            </a>\n          ),\n        },\n      ];\n    }\n    return [];\n  }, [data]);\n}\n\n/**\n * Custom hook to create a table instance using React Table.\n *\n * @param {Array} columns - The columns definition.\n * @param {Array} rowsData - The rows data.\n * @returns {Object} - The table instance.\n */\nfunction useTableInstance(columns, rowsData) {\n  return useTable(\n    {\n      columns,\n      data: rowsData,\n      initialState: {\n        hiddenColumns: columns\n          .filter((c) => c.hideInitially)\n          .map((c) => c.accessor),\n      },\n    },\n    useFilters\n  );\n}\n\n/**\n * Component to render the table and map.\n *\n * @param {Object} tableInstance - The table instance.\n * @returns {JSX.Element} - The rendered component.\n */\nfunction TableComponent({ tableInstance }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    allColumns,\n  } = tableInstance;\n\n  return (\n    <>\n      <div className=\"columns is-multiline\">\n        <span className=\"map column is-12-mobile is-5-desktop\">\n          <Map results={rows} />\n        </span>\n        <span className=\"table_wrapper column is-12-mobile is-7-desktop\">\n          <div id=\"table-dropdown\" className=\"dropdown\">\n            <div className=\"dropdown-trigger\">\n              <button\n                className=\"button\"\n                onClick={() =>\n                  document\n                    .getElementById(\"table-dropdown\")\n                    .classList.toggle(\"is-active\")\n                }\n              >\n                Select columns 🔽\n              </button>\n            </div>\n            <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n              {allColumns.map((column) => (\n                <div key={column.id} className=\"dropdown-content\">\n                  <label className=\"checkbox\">\n                    <input type=\"checkbox\" {...column.getToggleHiddenProps()} />\n                    {column.id}\n                  </label>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <table className=\"table is-hoverable\" {...getTableProps()}>\n            <thead>\n              {headerGroups.map((headerGroup) => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map((column) => (\n                    <th\n                      {...column.getHeaderProps({\n                        style: {\n                          minWidth: column.minWidth,\n                          width: column.width,\n                        },\n                      })}\n                    >\n                      {column.render(\"Header\")}\n                      <div>\n                        {column.canFilter ? column.render(\"Filter\") : null}\n                      </div>\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {rows.map((row) => {\n                prepareRow(row);\n                return (\n                  <tr {...row.getRowProps()}>\n                    {row.cells.map((cell) => {\n                      return (\n                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </span>\n      </div>\n    </>\n  );\n}\n\n/**\n * Main component to fetch data and render the table and map.\n *\n * @returns {JSX.Element} - The rendered component.\n */\nfunction TableAndMap() {\n  const data = useFetchData(SpreadsheetId, ApiKey);\n  const rowsData = useRowsData(data);\n  const columns = useColumns(data);\n  const tableInstance = useTableInstance(columns, rowsData);\n\n  return <TableComponent tableInstance={tableInstance} />;\n}\n\nexport default TableAndMap;\n","export default __webpack_public_path__ + \"static/media/milano-2.80d62e66.png\";","// Import necessary modules and components\nimport logo from \"./assets/milano-2.png\";\nimport { BsCaretDownSquareFill } from \"react-icons/bs\";\n\n// Define the URL for the Google Form\nconst GoogleForm = \"https://forms.gle/vDuLfQ7Bc9iKxT2o8\";\n\n// Define the NavigationBar component\nfunction NavigationBar() {\n  return (\n    // Define the navigation bar\n    <nav className=\"navbar is-light has-shadow py-2 mb-2\">\n      <div className=\"navbar-brand\">\n        <a className=\"navbar-item\" style={{ padding: \"0.9rem\" }}>\n          <img src={logo} style={{ maxHeight: \"120px\" }} />\n        </a>\n        <div className=\"navbar-start\">\n          <div className=\"navbar-item\">\n            <div className=\"title-subtitle-container\">\n              <p className=\"title\" style={{ fontSize: \"1.75rem\" }}>\n                Milan Standup Comedy Map\n              </p>\n              <p className=\"subtitle\" style={{ fontSize: \"0.875rem\" }}>\n                Perform comedy near you\n              </p>\n            </div>\n          </div>\n          <div\n            className=\"navbar-burger\"\n            onClick={() =>\n              // Toggle the active state of the navigation links\n              document.getElementById(\"nav-links\").classList.toggle(\"is-active\")\n            }\n          >\n            <BsCaretDownSquareFill fontSize=\"1.5em\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"navbar-menu\" id=\"nav-links\">\n        <div className=\"navbar-end\">\n          <a className=\"navbar-item navbar-item-centered\" href={GoogleForm}>\n            🎤 Submit an open mic night\n          </a>\n          <a\n            className=\"js-modal-trigger navbar-item-centered\"\n            data-target=\"modal-js-example\"\n          >\n            ❓ F.A.Q.\n          </a>\n          <a\n            className=\"navbar-item navbar-item-centered\"\n            href=\"https://www.instagram.com/_anarchytect/\"\n          >\n            📣 Contact me for feedbacks!\n          </a>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n// Export the NavigationBar component\nexport default NavigationBar;\n\n// Add an event listener for the DOMContentLoaded event\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Define a function to open a modal\n  function openModal($el) {\n    $el.classList.add(\"is-active\");\n  }\n\n  // Define a function to close a modal\n  function closeModal($el) {\n    $el.classList.remove(\"is-active\");\n  }\n\n  // Define a function to close all modals\n  function closeAllModals() {\n    // Close each modal\n    (document.querySelectorAll(\".modal\") || []).forEach(($modal) => {\n      closeModal($modal);\n    });\n  }\n\n  // Add a click event listener to each modal trigger\n  (document.querySelectorAll(\".js-modal-trigger\") || []).forEach(($trigger) => {\n    const modal = $trigger.dataset.target;\n    const $target = document.getElementById(modal);\n\n    // Open the target modal when the trigger is clicked\n    $trigger.addEventListener(\"click\", () => {\n      openModal($target);\n    });\n  });\n\n  // Add a click event listener to each modal close element\n  (\n    document.querySelectorAll(\n      \".modal-background, .modal-close, .modal-card-head .delete, .modal-card-foot .button\"\n    ) || []\n  ).forEach(($close) => {\n    const $target = $close.closest(\".modal\");\n\n    // Close the parent modal when the close element is clicked\n    $close.addEventListener(\"click\", () => {\n      closeModal($target);\n    });\n  });\n\n  // Add a keydown event listener to the document\n  document.addEventListener(\"keydown\", (event) => {\n    // Close all modals when the Escape key is pressed\n    if (event.code === \"Escape\") {\n      closeAllModals();\n    }\n  });\n});\n","// Importing necessary modules from react, react-dom and local files\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/styles.css\";\nimport TableAndMap from \"./TableAndMap\";\nimport NavigationBar from \"./NavigationBar\";\n\n// Constants for GitHub and Google Sheets URLs\nconst GitHubURL = \"https://github.com/morettimarco/open-mic-nights\";\nconst SpreadsheetId = \"1_X_znvg8kGbFMXoys011182T5ZTGONCsveY9uLEWsr8\";\nconst SpreadsheetURL =\n  \"https://docs.google.com/spreadsheets/d/\" + SpreadsheetId;\n\n// Main App component\nfunction App() {\n  // Array of Q&A objects to be displayed on the page\n  const qna = [\n    {\n      question: \"Found a bug? Wanna contribute? Rip the site and f**k us?\",\n      answer: (\n        <p>\n          Here's our <a href={GitHubURL}>Git repo</a>! Take a look at my code!\n        </p>\n      ),\n    },\n    {\n      question: \"How can I view the raw data of app?\",\n      answer: (\n        <p>\n          Head to the <a href={SpreadsheetURL}>Google Sheet.</a>\n        </p>\n      ),\n    },\n    {\n      question: \"Credits\",\n      answer: (\n        <p>\n          Many thanks to the original project{\" \"}\n          <a href=\"https://apuchitnis.github.io/open-mic-nights/\">\n            London Standup Comedy Map\n          </a>{\" \"}\n          and to the awesome{\" \"}\n          <a href=\"https://apuchitnis.github.io/\"> Apu Chitnis</a> for sharing\n          it.\n        </p>\n      ),\n    },\n  ];\n\n  // Render the NavigationBar, TableAndMap, and Q&A sections\n  return (\n    <>\n      <NavigationBar />\n\n      <TableAndMap />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns is-vcentered\">\n            {qna.map((qa) => {\n              return (\n                <div className=\"column\" key={qa.question}>\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <div className=\"card-header-title\">{qa.question}</div>\n                    </div>\n                    <div className=\"card-content\">\n                      <div className=\"content\">{qa.answer}</div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n// Get the root element from the HTML\nconst rootElement = document.getElementById(\"app\");\n// Render the App component into the root element\nReactDOM.render(<App />, rootElement);\n","const ApiKey = \"AIzaSyBf1UOdCb4_NT4h_g4Wzz4taWIok5cpeCQ\";\n\nexports.ApiKey = ApiKey;\n"],"sourceRoot":""}